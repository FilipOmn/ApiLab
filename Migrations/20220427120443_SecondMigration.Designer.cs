// <auto-generated />
using Labb_3_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb_3_API.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    [Migration("20220427120443_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb_3_API.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            Description = "an interest in programming..",
                            InterestTitle = "Programming"
                        },
                        new
                        {
                            InterestId = 2,
                            Description = "an interest in reading books and such",
                            InterestTitle = "Reading"
                        },
                        new
                        {
                            InterestId = 3,
                            Description = "an interest in cooking/eating food and other edibles",
                            InterestTitle = "Food"
                        },
                        new
                        {
                            InterestId = 4,
                            Description = "an interest in fishing",
                            InterestTitle = "Fishing"
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            Link_ = "https://stackoverflow.com/"
                        },
                        new
                        {
                            LinkId = 2,
                            Link_ = "https://www.w3schools.com/"
                        },
                        new
                        {
                            LinkId = 3,
                            Link_ = "https://books.google.com/"
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.LinkInterest", b =>
                {
                    b.Property<int>("LinkInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.HasKey("LinkInterestId");

                    b.HasIndex("InterestId");

                    b.HasIndex("LinkId");

                    b.ToTable("LinkInterests");
                });

            modelBuilder.Entity("Labb_3_API.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            PersonName = "Andreas",
                            Phone = "076 111 22 33"
                        },
                        new
                        {
                            PersonId = 2,
                            PersonName = "Anders",
                            Phone = "076 222 33 44"
                        },
                        new
                        {
                            PersonId = 3,
                            PersonName = "Maya",
                            Phone = "076 333 44 55"
                        });
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonInterests", b =>
                {
                    b.Property<int>("PersonInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonInterestId");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInterests");
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonLinks", b =>
                {
                    b.Property<int>("PersonLinksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonLinksId");

                    b.HasIndex("LinkId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonLinks");
                });

            modelBuilder.Entity("Labb_3_API.Models.LinkInterest", b =>
                {
                    b.HasOne("Labb_3_API.Models.Interest", "Interest")
                        .WithMany("LinkInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3_API.Models.Link", "Link")
                        .WithMany("LinkInterests")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonInterests", b =>
                {
                    b.HasOne("Labb_3_API.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3_API.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labb_3_API.Models.PersonLinks", b =>
                {
                    b.HasOne("Labb_3_API.Models.Link", "Link")
                        .WithMany("PersonLinks")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3_API.Models.Person", "Person")
                        .WithMany("PersonLinks")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
